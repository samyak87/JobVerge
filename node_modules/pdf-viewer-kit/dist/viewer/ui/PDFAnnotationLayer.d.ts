import { PageViewport, PDFDocumentProxy, PDFPageProxy } from 'pdfjs-dist';
import { default as WebViewer } from './WebViewer';
/**
 * Renders PDF.jsâ€™s built-in annotations (links, forms, etc.)
 * into an overlay on a rendered PDF page.
 */
export default class AnnotationLayer {
    private _pageWrapper;
    private _page;
    private _viewport;
    private _annotationLayerDiv;
    private _pdfJsInternalAnnotationLayerInstance;
    private _isDestroyed;
    /**
     * @param pageWrapper  Container element for the page.
     * @param page         PDF.js page proxy.
     * @param viewport     The PDF.js viewport at current scale/rotation.
     */
    constructor(pageWrapper: HTMLElement, page: PDFPageProxy, viewport: PageViewport);
    /**
     * Creates and renders the annotation layer for this page.
     *
     * @param webViewer     Host WebViewer instance for link navigation.
     * @param pdfDocument   The loaded PDF document.
     * @param annotationHostDiv Optional element for freehand annotations (unused here).
     * @returns The DIV containing rendered annotations.
     */
    createAnnotationLayer(webViewer: WebViewer, pdfDocument: PDFDocumentProxy, annotationHostDiv?: HTMLElement): Promise<HTMLDivElement>;
    /**
     * Cleans up the annotation layer, removing DOM elements
     * and clearing references for garbage collection.
     */
    destroy(): void;
}
