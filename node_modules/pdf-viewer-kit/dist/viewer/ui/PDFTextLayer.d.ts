import { PageViewport, PDFPageProxy } from 'pdfjs-dist';
/**
 * Manages the rendering of the PDF.js text layer and a matching annotation layer.
 */
declare class TextLayer {
    private _pageWrapper;
    private _page;
    private _viewport;
    private _textLayerDiv;
    private _annotationHostDiv;
    private _pdfJsInternalTextLayerInstance;
    private _selectionHandler;
    private _isDestroyed;
    private _containerId;
    /**
     * @param pageWrapper - Container element for this page's layers.
     * @param page - PDFPageProxy for accessing text content.
     * @param viewport - Viewport for coordinate mapping.
     */
    constructor(containerId: string, pageWrapper: HTMLElement, page: PDFPageProxy, viewport: PageViewport);
    /**
     * Creates and renders the text layer and annotation host layer.
     *
     * @returns A promise resolving to the text-layer and annotation-layer divs.
     * @throws If called after destruction or if initialization failed.
     */
    createTextLayer(): Promise<[HTMLDivElement, HTMLDivElement]>;
    private _putActualFonts;
    private _getCleanFontName;
    /**
     * Wraps the rendered text spans into a single <p> for better formatting.
     */
    private _wrapTextLayerIntoPTag;
    /**
     * Example keydown handler; replace or remove as needed.
     */
    private keyDown;
    /**
     * Destroys the text layer, annotation layer, and internal references.
     */
    destroy(): void;
}
export default TextLayer;
